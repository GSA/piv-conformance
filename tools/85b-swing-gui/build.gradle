// set up junit 5 support for gradle
buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.ajoberstar.grgit' version '2.1.0'
    //id 'com.zyxist.chainsaw' version '0.1.3'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'eclipse'

//javaModule.name = 'gov.gsa.pivconformancegui'

repositories {
    jcenter()
    maven { url 'https://repository.apache.org/snapshots' }
}

dependencies {
    compile 'org.bouncycastle:bcprov-jdk15on:1.64+'
    compile 'org.bouncycastle:bcprov-ext-jdk15on:1.64+'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.64+'

    compile 'commons-cli:commons-cli:1.4'
    compile 'commons-codec:commons-codec:1.11'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.6'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'

    compile 'com.payneteasy:ber-tlv:1.0-8'
    compile 'org.slf4j:slf4j-api:1.8+'
    compile 'ch.qos.logback:logback-classic:1.3+'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.21.0.1'
	compile group: 'com.jgoodies', name: 'jgoodies-forms', version: '1.6.0'

    compile files('lib/cardlib.jar')
    compile files('lib/conformancelib.jar')

    compile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    compile 'org.junit.jupiter:junit-jupiter-params:5.1.0'
    compile 'org.junit.platform:junit-platform-launcher:1.0.0'
    runtime 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    runtime 'org.junit.jupiter:junit-jupiter-params:5.1.0'

    shadow 'org.bouncycastle:bcprov-jdk15on:1.64+'
    shadow 'org.bouncycastle:bcprov-ext-jdk15on:1.64+'
}

sourceSets {
    main {
        java {
            if(targetCompatibility != JavaVersion.VERSION_11)
                exclude '**/module-info.java'
        }
    }
}

import org.gradle.plugins.ide.eclipse.model.AccessRule

eclipse {
    classpath {
        file {
            whenMerged {
                def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }
                jre.accessRules.add(new AccessRule('0', 'javax/smartcardio/**'))
                def cardlib = entries.find { it.path.contains 'cardlib.jar' }
                cardlib.sourcePath = fileReference(file('lib/cardlib-sources.jar'))
                def conformancelib = entries.find { it.path.contains 'conformancelib.jar' }
                conformancelib.sourcePath = fileReference(file('lib/conformancelib-sources.jar'))
            }
        }
    }
}

// Define the main class for the application jar that will be produced
mainClassName = 'gov.gsa.pivconformancegui.GuiRunnerApplication'

jar {
	dependsOn(shadowJar { classifier = null })
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

// use junit platform for tests
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava {
    options.debugOptions.debugLevel = "source,lines,vars"
}
